syntax = "proto3";

package monolith;

option optimize_for = SPEED;

service Hangman {
    rpc StartGame (StartGameParams) returns (Game); // requirement #1
    rpc GuessChar (Guess) returns (Game); // requirement #2
    rpc SubscribeToGame (GameId) returns (stream Notification); // requirement #3
    rpc ResumeGame (GameId) returns (Game); // requirement #4
    rpc ListGames (ListGamesParams) returns (stream Game); // requirement #5
}

message StartGameParams {} // placeholder for future changes without breaking compatibility
message ListGamesParams {} // placeholder for future changes without breaking compatibility

message GameId {
    uint64 game_id = 1;
}

message Notification {
    string msg = 1;
}

message Guess {
    uint64 game_id = 1;
    string char = 2;
}

message Game {
    uint64 game_id = 1;
    uint64 remaining_guesses = 2; // if 0 remaining and not won yet, then you lost
    repeated string guesses = 3;
    string word = 4;
    bool won = 5;
    bool game_over = 6;
}
